@import './base.css';


html {
    cursor: none;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 1.5rem;
    background: rgba(15,15,15,1);
    box-shadow: 0 1rem 2rem 0 rgba(255, 255, 255, 0.7);
    -webkit-box-shadow: 0 1rem 2rem 0 rgba(255, 255, 255, 0.7);
    -moz-box-shadow: 0 1rem 2rem 0 rgba(255, 255, 255, 0.7);
}

header > h1 {
    color: white;
    letter-spacing: 0.2rem;
    font-size: 4rem;
    margin: 0 1rem;
    user-select: none;
    margin-left: 6rem;
}

#background {
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
    opacity: 0.8;
    background-position: center;
    background-repeat: repeat;
}

#darken {
    position: fixed;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -2;
    background: black;
}

#cursor {
    display: block;
    position: fixed;
    pointer-events: none;
    opacity: 0;
    width: 2rem;
    position: relative;
    z-index: 1000;
    aspect-ratio: 1 !important;
    transition: width 0.2s ease-in-out;
    filter: saturate(0) brightness(1.1) contrast(0.8);
}

#mouse-pointer {
    width: 100%;
    height: 100%;
    content: url(/images/cursor_base.webp);
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

#mouse-animated {
    width: 55%;
    height: 50%;
    position: absolute;
    bottom: 14%;
    right: 7%;
    animation: rotation 3s infinite forwards linear;
    content: url(/images/cursor_animated.webp);
}

*:hover #cursor {
    opacity: 1;
}

html:has(a:hover) #cursor, html:has(.reactive:hover) #cursor {
    width: 2.7rem;
}

html:has(iframe:hover) #cursor {
    opacity: 0;
}

a {
    cursor: none;
}

main {
    background-position: center;
    background-attachment: fixed;
    background-size: cover;
}

@media screen and (max-width: 700px) {
    header > h1 {
        display: none;
    }
}

@media only screen and (hover: none) and (pointer: coarse){
    #cursor {
        display: none;
    }
}